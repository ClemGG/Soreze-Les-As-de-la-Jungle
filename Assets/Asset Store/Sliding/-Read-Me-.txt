-------------------------------------------------------------------------
WyrmTale Slider Puzzle Pack
(C)opyright 2011 WyrmTale Games
-------------------------------------------------------------------------

INSTALLATION FROM UNITY ASSET STORE

After you download and import this package from the Unity Asset Store, this product, containing the fully scripted and  functional dice, will be automaticly installed.

INSTALLATION AFTER DOWNLOAD FROM WWW.WYRMTALE.COM WEBSITE

After you have downloaded the component archive file (slider-puzzle-pack.rar) you will find a slider-puzzle-pack.unitypackage when you extract the files from the archive.

To install this package :

- create an empty Unity Project.
- select [Menu] Assets->Import Package->Custom Package
- select the extracted slider-puzzle-pack.unitypackage and import all assets.

After importing is complete, you will be ready to go.

-------------------------------------------------------------------------

DEMO PROJECT

in  [Project] Sliding/Demo you will find the Product Demo

regarding the JSDemo	: Javascript Demo.

IMPORTANT ! 
To run the Javascript Sample you need to move the /Jigsaw/Standard Assets folder into the {root}/ of your project.,
The reason for this is because the JigsawPuzzle class we are extending is a C# class and has to be pre-compiled.
The JS script files were commented to avoid import compiler errors so you need to remove the begin /*  & end */ tags.
You have to set the Puzzle editor settings before starting the example. Check the C# sample for the right values.

-------------------------------------------------------------------------

USAGE

 To Create an Ingame Puzzle

 1. Subclass the SliderPuzzle Class to a 'custom' SliderPuzzle Class like 
	( names like DemoSlidingPuzzle, CustomSlidingPuzzle, GameSlidingPuzzle would be advisable for this subclass )

	TIP! Check DemoSlidingPuzzle class in product Demo for reference. You can always re-use and modify that one.

	the DemoSlidingPuzzle Class is a sub class of SliderPuzzle that can be used to create the ingame puzzle and handle
	specific call backs , like notification when the puzzle has been solved.

	The following base functions can/have been overridden :

		- PuzzleStart(); 						: is called when new puzzle is started
		- StartSlide(GameObject piece); 		: is called when a puzzle piece starts sliding
		- EndSlide(GameObject piece);			: is called when a puzzle piece finished sliding
		- PuzzleSolved(int moves, float time);	: is called when the puzzle has been solved	

 2. Add The SliderMain prefab in | [Project]/Sliding/Standard Assets | to the current scene 	
 3. Create a (scaled) puzzle cube primitive - the puzzle will automaticly generated on the 'forward' side of this cube
 4. Set the right dimensions ( width/height/Thickness = scale x/y/z) of your puzzle cube primitive
 5. Add your 'custom' SliderPuzzle subclass (from step 1.) to your puzzle 'cube' game object
 6. adjust the settings of your puzzle

	-	image 			: 	will contain the projected picture
	-	size			:	how many pieces will this puzzle have (x,y)
	-	emptySpot 		:	where will the empty sliding spot be located
	-	showGrid		:	display 'helper' lines
	-	spacing			:  	how much spacing between pieces
	-	slideSpeed		:	how fast do we slide a piece (seconds)

-------------------------------------------------------------------------

PACKAGE STRUCTURE

 [Project] Sliding/Demo 			- Product Demo (scene file + Demo application script + DemoSlidingPuzzle class + demo materials + demo textures)
 [Project] Slinding/Materials 		- All default product materials and shaders and textures.
 [Project] Sliding/Standard Assets 	- SliderMain prefab + product c# scripts


  All C# code in this project (demo+product) is fully 'inline' documented for learning purposes

-------------------------------------------------------------------------

If you have any questions regarding this product send us an email at support@wyrmtale.com


Thanks for you interest in our components

	The WyrmTale Team.

